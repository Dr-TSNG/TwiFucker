name: Build
on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Write key
        run: |
          echo buildWithGitSuffix=true >> local.properties
          echo storePassword='${{ secrets.KEY_STORE_PASSWORD }}' >> local.properties
          echo keyAlias='${{ secrets.ALIAS }}' >> local.properties
          echo keyPassword='${{ secrets.ALIAS_KEY_PASSWORD }}' >> local.properties
          echo fileDir='../key.jks' >> local.properties
          echo "${{ secrets.KEY_STORE }}" | base64 --decode > key.jks
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          echo 'android.native.buildOutput=verbose' >> gradle.properties
          chmod +x ./gradlew

      - name: Build
        id: build
        run: |
          ./gradlew :app:assemble --no-daemon
          echo "releaseName=`ls app/release/TwiFucker-*.apk | awk -F '(/|.apk)' '{print $3}'`" >> $GITHUB_OUTPUT
          echo "debugName=`ls app/debug/TwiFucker-*.apk | awk -F '(/|.apk)' '{print $3}'`" >> $GITHUB_OUTPUT

      - name: Upload release
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build.outputs.releaseName }}
          path: "app/release/*.apk"

      - name: Upload debug
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build.outputs.debugName }}
          path: "app/debug/*.apk"

      - name: Upload mappings
        uses: actions/upload-artifact@v3
        with:
          name: mappings
          path: "app/build/outputs/mapping/release"

      - name: Post to channel
        if: ${{ github.event_name != 'pull_request' && success() && github.ref == 'refs/heads/master' }}
        env:
          CHANNEL_ID: ${{ secrets.TELEGRAM_CHAN }}
          GROUP_ID: ${{ secrets.TELEGRAM_GROUP }}
          TOPIC_ID: ${{ secrets.TELEGRAM_TOPIC }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          COMMIT_URL: ${{ github.event.head_commit.url }}
          COMMIT_MESSAGE: |+
            ```
            ${{ github.event.head_commit.message }}
            ``` by `${{ github.event.head_commit.author.name }}`
            *Commit:* [${{ github.sha }}](${{ github.event.head_commit.url }})
        run: |
          OUTPUT="app/build/outputs/apk/"
          export release=$(find "app/release" -name "TwiFucker-*-release.apk")
          export debug=$(find "app/debug" -name "TwiFucker-*-debug.apk")
          ESCAPED=`python3 -c 'import json,os,urllib.parse; msg = json.dumps(os.environ["COMMIT_MESSAGE"]); print(urllib.parse.quote(msg if len(msg) <= 1024 else json.dumps(os.environ["COMMIT_URL"])))'`
          curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${CHANNEL_ID}&media=%5B%7B%22type%22:%22document%22,%20%22media%22:%22attach://release%22%7D,%7B%22type%22:%22document%22,%20%22media%22:%22attach://debug%22,%22parse_mode%22:%22MarkdownV2%22,%22caption%22:${ESCAPED}%7D%5D"  -F release="@$release" -F debug="@$debug"
          curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${GROUP_ID}&message_thread_id=${TOPIC_ID}&media=%5B%7B%22type%22:%22document%22,%20%22media%22:%22attach://release%22%7D,%7B%22type%22:%22document%22,%20%22media%22:%22attach://debug%22,%22parse_mode%22:%22MarkdownV2%22,%22caption%22:${ESCAPED}%7D%5D"  -F release="@$release" -F debug="@$debug"
